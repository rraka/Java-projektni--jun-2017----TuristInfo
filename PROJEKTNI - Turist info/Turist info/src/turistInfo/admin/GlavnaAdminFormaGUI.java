/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package turistInfo.admin;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTree;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import turistInfo.admin.interfejsi.PlacaSeInterfejs;
import turistInfo.korisnik.GlavnaKorisnickaFormaGUI;

/**
 *
 * @author raka
 */
public class GlavnaAdminFormaGUI extends javax.swing.JFrame {

    private DefaultTableModel modelTabelaTuristickeAtrakcije;
    private ArrayList<TuristickaAtrakcija> sveTuristickeAtrakcije;

    public GlavnaAdminFormaGUI() {
        initComponents();
        this.setTitle("Turist Info");
        setVisible(true);
        setLocationRelativeTo(null);//prikaz forme na centru ekrana
        tabelaAtrakcija.getTableHeader().setReorderingAllowed(false);

        sveTuristickeAtrakcije = PomocnaKlasa.deSerijalizacija();
        modelTabelaTuristickeAtrakcije = (DefaultTableModel) tabelaAtrakcija.getModel();
        popuniTabeluAtrakcija(sveTuristickeAtrakcije, tabelaAtrakcija); //popunjavanje tabele dogadjaja

        // tabelaAtrakcija.setShowGrid(true);
    }

    public DefaultTableModel getModelTabelaTuristickeAtrakcije() {
        return modelTabelaTuristickeAtrakcije;
    }

    public void setModelTabelaTuristickeAtrakcije(DefaultTableModel modelTabelaTuristickeAtrakcije) {
        this.modelTabelaTuristickeAtrakcije = modelTabelaTuristickeAtrakcije;
    }

    public ArrayList<TuristickaAtrakcija> getSveTuristickeAtrakcije() {
        return sveTuristickeAtrakcije;
    }

    public void setSveTuristickeAtrakcije(ArrayList<TuristickaAtrakcija> sveTuristickeAtrakcije) {
        this.sveTuristickeAtrakcije = sveTuristickeAtrakcije;
    }

    public JTable getTabelaAtrakcija() {
        return tabelaAtrakcija;
    }

    public void setTabelaAtrakcija(JTable tabelaAtrakcija) {
        this.tabelaAtrakcija = tabelaAtrakcija;
    }

    public void popuniTabeluAtrakcija(ArrayList<TuristickaAtrakcija> sveTuristickeAtrakcije, JTable tabelaAtrakcija) {

        //sviDogadjaji = dogadjaji;
        DefaultTableCellRenderer centriranje = new DefaultTableCellRenderer();
        centriranje.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
        DefaultTableCellRenderer centriranjeDesno = new DefaultTableCellRenderer();
        centriranjeDesno.setHorizontalAlignment(DefaultTableCellRenderer.RIGHT);
        tabelaAtrakcija.getColumnModel().getColumn(0).setCellRenderer(centriranje); //centriranje datuma i vremena
        tabelaAtrakcija.getColumnModel().getColumn(3).setCellRenderer(centriranjeDesno);
        //brisanje tabele
        int rowCount = modelTabelaTuristickeAtrakcije.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            modelTabelaTuristickeAtrakcije.removeRow(i);
        }
        int redniBroj = 1;
        for (TuristickaAtrakcija turistickaAtrakcija : sveTuristickeAtrakcije) {
            String nazivAtrakcije = turistickaAtrakcija.getNaziv();
            String lokacijaAtrakcije = turistickaAtrakcija.getLokacija();

            String cijenaAtrakcije = " ";

            if (turistickaAtrakcija instanceof Crkva) {
                cijenaAtrakcije = "Dobrovoljni prilog";
            }
            if (turistickaAtrakcija instanceof IstorijskiSpomenik) {
                cijenaAtrakcije = "Besplatno";
            }
            if (turistickaAtrakcija instanceof Muzej) {
                if (((Muzej) turistickaAtrakcija).daLiSePlaca() == 1) {
                    cijenaAtrakcije = String.valueOf(((Muzej) turistickaAtrakcija).getCijenaUlaznice());
                } else {
                    cijenaAtrakcije = String.valueOf(((Muzej) turistickaAtrakcija).getCijenaUlaznice());
                }
            }
            if (turistickaAtrakcija instanceof ZabavniPark) {
                cijenaAtrakcije = String.valueOf(((ZabavniPark) turistickaAtrakcija).getCijenaUlaznice());
            }

            modelTabelaTuristickeAtrakcije.addRow(new Object[]{redniBroj, nazivAtrakcije, lokacijaAtrakcije, cijenaAtrakcije});

            redniBroj++;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelaPocetnaNaslov = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaAtrakcija = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        komboBoksVrstaAtrakcije = new javax.swing.JComboBox<>();
        dugmeDodajNovuAtrakciju = new javax.swing.JButton();
        dugmeIzmjeniAtrakciju = new javax.swing.JButton();
        dugmeIzbrisiAtrakciju = new javax.swing.JButton();
        dugmePokreniKorisnickuAplikaciju = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(850, 550));

        labelaPocetnaNaslov.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        labelaPocetnaNaslov.setText("TURIST INFO");
        labelaPocetnaNaslov.setToolTipText("");
        labelaPocetnaNaslov.setName("labelaNaslov"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(408, Short.MAX_VALUE)
                .addComponent(labelaPocetnaNaslov)
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(labelaPocetnaNaslov, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 365, Short.MAX_VALUE)
        );

        jLabel2.setText("Turističke atrakcije:");

        tabelaAtrakcija.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "R.B.", "Naziv", "Lokacija", "Cijena"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabelaAtrakcija);
        if (tabelaAtrakcija.getColumnModel().getColumnCount() > 0) {
            tabelaAtrakcija.getColumnModel().getColumn(0).setMinWidth(40);
            tabelaAtrakcija.getColumnModel().getColumn(0).setPreferredWidth(45);
            tabelaAtrakcija.getColumnModel().getColumn(0).setMaxWidth(50);
            tabelaAtrakcija.getColumnModel().getColumn(3).setMinWidth(100);
            tabelaAtrakcija.getColumnModel().getColumn(3).setPreferredWidth(110);
            tabelaAtrakcija.getColumnModel().getColumn(3).setMaxWidth(120);
        }

        komboBoksVrstaAtrakcije.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Muzej", "Istorijski spomenik", "Zabavni park", "Crkva" }));

        dugmeDodajNovuAtrakciju.setText("Dodaj novu");
        dugmeDodajNovuAtrakciju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dugmeDodajNovuAtrakcijuActionPerformed(evt);
            }
        });

        dugmeIzmjeniAtrakciju.setText("Izmjeni");
        dugmeIzmjeniAtrakciju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dugmeIzmjeniAtrakcijuActionPerformed(evt);
            }
        });

        dugmeIzbrisiAtrakciju.setText("Izbriši");
        dugmeIzbrisiAtrakciju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dugmeIzbrisiAtrakcijuActionPerformed(evt);
            }
        });

        dugmePokreniKorisnickuAplikaciju.setText("Korisnička aplikacija");
        dugmePokreniKorisnickuAplikaciju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dugmePokreniKorisnickuAplikacijuActionPerformed(evt);
            }
        });

        jLabel1.setText("Vrsta turističke atrakcije:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(dugmeDodajNovuAtrakciju, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dugmeIzmjeniAtrakciju, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dugmeIzbrisiAtrakciju, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dugmePokreniKorisnickuAplikaciju, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(komboBoksVrstaAtrakcije, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(komboBoksVrstaAtrakcije, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(dugmeDodajNovuAtrakciju, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dugmeIzmjeniAtrakciju, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dugmeIzbrisiAtrakciju, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dugmePokreniKorisnickuAplikaciju, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 869, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dugmeIzbrisiAtrakcijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dugmeIzbrisiAtrakcijuActionPerformed

        try {
            int selektovanaAtrakcija = tabelaAtrakcija.getSelectedRow();
            if (selektovanaAtrakcija == -1) {
                JOptionPane.showMessageDialog(null, "Nije selektovana ni jedna turisticka atrakcija!");
            } else {
                int indeks = tabelaAtrakcija.getSelectedRow();
                String naziv = sveTuristickeAtrakcije.get(indeks).getNaziv();
                sveTuristickeAtrakcije.remove(indeks);
                PomocnaKlasa.serijalizacija(sveTuristickeAtrakcije);
                JOptionPane.showMessageDialog(null, " Turisticka atrakcija: ***" + naziv + "*** je uspjesno izbrisana!");
                popuniTabeluAtrakcija(sveTuristickeAtrakcije, tabelaAtrakcija);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_dugmeIzbrisiAtrakcijuActionPerformed

    private void dugmeDodajNovuAtrakcijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dugmeDodajNovuAtrakcijuActionPerformed
        String vrstaTuristickeAtrakcije = (String) komboBoksVrstaAtrakcije.getSelectedItem();
        new DodajNovuTuristickuAtrakcijuGUI(this, vrstaTuristickeAtrakcije, tabelaAtrakcija);
        //setVisible(false);

    }//GEN-LAST:event_dugmeDodajNovuAtrakcijuActionPerformed

    private void dugmeIzmjeniAtrakcijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dugmeIzmjeniAtrakcijuActionPerformed
        int selektovanaAtrakcija = tabelaAtrakcija.getSelectedRow();
        if (selektovanaAtrakcija == -1) {
            JOptionPane.showMessageDialog(null, "Nije selektovana ni jedna turisticka atrakcija!");
        } else {
            new IzmjeniTuristickuAtrakcijuGUI(this, selektovanaAtrakcija, tabelaAtrakcija);
        }
    }//GEN-LAST:event_dugmeIzmjeniAtrakcijuActionPerformed

    private void dugmePokreniKorisnickuAplikacijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dugmePokreniKorisnickuAplikacijuActionPerformed
        Runnable runnable = new Runnable() {
            @Override
            public void run() {
                new GlavnaKorisnickaFormaGUI().setVisible(true);

            }
        };
        new Thread(runnable).start();
        // new GlavnaKorisnickaFormaGUI();
    }//GEN-LAST:event_dugmePokreniKorisnickuAplikacijuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GlavnaAdminFormaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GlavnaAdminFormaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GlavnaAdminFormaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GlavnaAdminFormaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GlavnaAdminFormaGUI();

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton dugmeDodajNovuAtrakciju;
    private javax.swing.JButton dugmeIzbrisiAtrakciju;
    private javax.swing.JButton dugmeIzmjeniAtrakciju;
    private javax.swing.JButton dugmePokreniKorisnickuAplikaciju;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> komboBoksVrstaAtrakcije;
    private javax.swing.JLabel labelaPocetnaNaslov;
    private javax.swing.JTable tabelaAtrakcija;
    // End of variables declaration//GEN-END:variables
}
