/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package turistInfo.korisnik;

import java.awt.BorderLayout;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.ScrollPaneConstants;
import javax.swing.ScrollPaneLayout;
import javax.swing.SwingConstants;
import javax.swing.plaf.basic.BasicSplitPaneUI;
import javax.swing.text.DefaultCaret;
import turistInfo.admin.TuristickaAtrakcija;

/**
 *
 * @author raka
 */
public class SimulacijaFormaGUI extends javax.swing.JFrame {

    /**
     * Creates new form SimulacijaFormaGUI
     */
    
    private int m;
    private int n;
    private int brojTuristickihatrakcija;
    private int brojTurista;
    public PomocnaKlasa pk;
    public static GlavnaKorisnickaFormaGUI gkf;
    public int brojacKorisnika;
    
    
    public SimulacijaFormaGUI(int m, int n, int brojTurista, int brojTuristickihAtrakcija, GlavnaKorisnickaFormaGUI gkf) {
        initComponents();
        this.m = m;
        this.n = n;
        this.gkf = gkf;
        this.brojTuristickihatrakcija = brojTuristickihAtrakcija;
        this.brojTurista = brojTurista;
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setVisible(true);
        this.setLocationRelativeTo(null);
        this.setTitle("Simulacija");
        
        DefaultCaret dc = (DefaultCaret) tekstAreaSimulacija.getCaret();
        dc.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        jScrollPane2.setViewportView(tekstAreaSimulacija);
     //   tekstAreaSimulacija.set
        tekstAreaSimulacija.setRows(m);
        tekstAreaSimulacija.setColumns(n);
        tekstAreaSimulacija.setTabSize(2);
        tekstAreaSimulacija.setWrapStyleWord(false);
        tekstAreaSimulacija.setLineWrap(false);
        tekstAreaSimulacija.setEditable(false);
        tekstAreaSimulacija.setEnabled(true);
                            // JScrollBar vertical = jScrollPane3.getVerticalScrollBar();
                            // vertical.setValue(vertical.getMaximum());
        pk = new PomocnaKlasa(m,n, this);
        pk.postaviTuristeNaMapu(brojTurista, this);
        pk.postaviTuristickeAtrakcijeNaMapu(m, n, brojTuristickihAtrakcija);
        prikaziMapuNaFormi(m, n);
        //PomocnaKlasa.pokreniSimulaciju();
        pk.pokreniSimulaciju();

        pack();
    }//

    public PomocnaKlasa getPk() {
        return pk;
    }

    
    public JTextArea getTekstAreaSimulacija() {
        return tekstAreaSimulacija;
    }

    public void setTekstAreaSimulacija(JTextArea tekstAreaSimulacija) {
        this.tekstAreaSimulacija = tekstAreaSimulacija;
    }
    
    
   
    
    public void prikaziMapuNaFormi(int m, int n){
       
            Object[][] mapa = pk.getMapa();
           // System.out.print("\n\n\n\n\n\nODAVDE POCINJE ISPIS:::::   N I J E     N U L L");
            tekstAreaSimulacija.append("M A P A: \n");
               for(int i=0; i<m; i++){
                   tekstAreaSimulacija.append(" \n");
                   for(int j=0; j<n; j++){
                       if(mapa[i][j] == null){
                       tekstAreaSimulacija.append("*\t");
                       }
                       else{
                           if(mapa[i][j] instanceof TuristickaAtrakcija){
                           tekstAreaSimulacija.append("TA\t");
                           }
                           else{
                               tekstAreaSimulacija.append("T\t");
                           }
                       }
                       //tekstAreaSimulacija.append(mapa[i][j].toString());
                   }
         
        }
               tekstAreaSimulacija.append("\n");
               for(int i=0; i<=n*3; i++)
                tekstAreaSimulacija.append("=");
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tekstAreaSimulacija = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(450, 450));
        setPreferredSize(new java.awt.Dimension(600, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tekstAreaSimulacija.setColumns(20);
        tekstAreaSimulacija.setRows(5);
        jScrollPane2.setViewportView(tekstAreaSimulacija);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 666, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Turista turisti[] = pk.getSviTuristi();
        for(int i=0; i<turisti.length; i++){
            turisti[i].interrupt();
        }
       
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea tekstAreaSimulacija;
    // End of variables declaration//GEN-END:variables
}
